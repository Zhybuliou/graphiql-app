{
  "en": "en",
  "ru": "ru",
  "heading": "Hello",
  "homePage": "Home",
  "welcomePage": "Welcome page",
  "mainPage": "MainPage",
  "goMainPage": "Go to main page - GraphiQL",
  "welcomePageTitle": "General information about the developers, project, and course.",
  "signUp": "Sign up",
  "signIn": "Sign in",
  "logOut": "Logout",
  "eMailAddress": "E-mail Address",
  "password": "Password",
  "confirmPassword": "Confirm password",
  "login": "Login",
  "name": "Name",
  "signInPageTitle": "Sign In, please",
  "signInPageDontHaveAccount": "Dont have an account? ",
  "signInPageRegister": "Register",
  "signInPageFirebaseError": "Firebase: Login failed",
  "signUpPageTitle": "Sign Up, please",
  "signUpPageHaveAccount": "Already have an account? ",
  "signUpPageFirebaseError": "Firebase: Register failed",
  "welcomePagePresentationTitle": "GraphiQL Project",
  "welcomePagePresentationDescriptionPartFirst": "This is a final project of RS School React 2023 Q4 course and generally dedicated to editor of GraphQl requests. Using it, you can try and practice different GraphQl requests, get responses from API, explorer API schema, set variables and headers.",
  "welcomePagePresentationDescriptionPartSecond": "The app has a sticky header. It also supports localization in Russian and English. Authentication and authorization are handled using Firebase with email options. Client-side validation ensures secure input. The footer contains links to the authors GitHub profiles and the course reference.",
  "welcomePageTechnologiesTittle": "Technologies we used in the project",
  "welcomePageOurTeamTittle": "Our team",
  "welcomePageOurTeamAlexName": "Alex",
  "welcomePageOurTeamAlexDescription": "Front-end Developer",
  "welcomePageOurTeamTvaExpertsName": "Viktor Trachenko",
  "welcomePageOurTeamTvaExpertsDescription": "Front-end Developer",
  "welcomePageOurTeamZhybuliouName": "Vitali Zhybuliou",
  "welcomePageOurTeamZhybuliouDescription": "Front-end Developer",
  "errorValidationNameRequired": "Name is required",
  "errorValidationName2Characters": "Name must be at least 2 characters",
  "errorValidationEmailRequired": "Email is required",
  "errorValidationEmailInvalid": "Invalid email address",
  "errorValidationEmailInvalidOrDomain": "Invalid email format or missing domain",
  "errorValidationEmailInvalidLocalToggle": "Invalid localToggle-part format",
  "errorValidationPasswordRequired": "Password is required",
  "errorValidationPasswordValidSetOfCharacters": "Password must only contain Latin symbols, digits, special characters adnd unicode symbols",
  "errorValidationPasswordUpperCaseLetter": "Password must contain at least one uppercase letter",
  "errorValidationPasswordLowerCaseLetter": "Password must contain at least one lowercase letter",
  "errorValidationPasswordDigit": "Password must contain at least one digit",
  "errorValidationPasswordSpecialChar": "Password must contain at least one special character",
  "errorValidationPasswordWhitespace": "Password must not contain whitespace",
  "errorValidationPasswordSize": "Must be at least 8 characters",
  "errorValidationConfirmPasswordRequired": "Confirm Password is required",
  "errorValidationConfirmPasswordDoestMatch": "Confirm Password does not match",
  "page404Tittle": "Not Found",
  "playgroundButtonSchemaTitle": "Schema",
  "playgroundButtonPrettifyTitle": "Prettify",
  "playgroundIsLoading": "Loading...",
  "playgroundButtonExecuteTitle": "Execute query",
  "playgroundParamsTabVariablesTitle": "query variables",
  "playgroundParamsTabHeadersTitle": "headers html",
  "playgroundResponseNoData": "No data! Make a request!",
  "playgroundErrorBadRequest": "Error. Bad Request",
  "playgroundErrorHTTP": "Error. We can't get data",
  "playgroundErrorCantGetSchema": "Error. We can't get the schema.",
  "schemaTabQueriesTitle": "queries",
  "schemaTabTypeArgumentsTitle": "Type Arguments",
  "schemaTabTypeDetailsTitle": "Type Details",
  "schemaTabTypeDetailsType": "type"
}
